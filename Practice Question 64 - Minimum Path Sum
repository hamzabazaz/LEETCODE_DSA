class Solution {
    public int minPathSum(int[][] grid) {
        int m=grid.length;
        int n=grid[0].length;
        Integer[][]memo=new Integer[m][n];

        return minPath(grid,m-1,n-1,memo);
    }

    private  int minPath(int[][]grid,int row,int col,Integer[][]memo){
        if(row==-1||col==-1) return Integer.MAX_VALUE;
        if(row==0&&col==0) return grid[0][0];

        if(memo[row][col]!=null) return memo[row][col];

        int cost1=minPath(grid,row-1,col,memo);
        int cost2=minPath(grid,row,col-1,memo);

        int minCost=Math.min(cost1,cost2);

        memo[row][col]=minCost+grid[row][col];

        return memo[row][col];
    }
}
