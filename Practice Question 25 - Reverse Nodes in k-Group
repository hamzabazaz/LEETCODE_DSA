/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {

        int count=0;
        ListNode current=head;

        while(current!=null && count<k){
            current=current.next;
            count ++;
        }

        if(count<k){
            return head;
        }

        ListNode prev=null;
        current=head;
        for(int i=0;i<k;i++){
            ListNode nextNode=current.next;
            current.next=prev;
            prev=current;
            current=nextNode;
        }

        head.next=reverseKGroup(current,k);

        return prev;

        
    }

}
