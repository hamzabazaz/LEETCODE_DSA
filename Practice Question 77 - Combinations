class Solution {
    public List<List<Integer>> combine(int n, int k) {

        List<List<Integer>> res=new ArrayList<>();
        List<Integer> combination=new ArrayList<>();
       backtrack(1,n,k,res,combination);

        return res;
    }

    private void backtrack(int si,int n,int k,List<List<Integer>> res,List<Integer>combination){
    
        if(combination.size()==k){
            res.add(new ArrayList(combination));
            return;
        }

         for(int i=si;i<=n;i++){
            combination.add(i);
            backtrack(i+1,n,k,res,combination);
            combination.remove(combination.size()-1);
         }

    }
}
