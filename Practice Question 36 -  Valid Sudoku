for(int i=0;i<9;i++){
            HashSet<Character>rowSet=new HashSet<>();
            HashSet<Character>colSet=new HashSet<>();

            for(int j=0;j<9;j++){
                if(board[i][j]!='.'){
                    if(rowSet.contains(board[i][j])) return false;
                    rowSet.add(board[i][j]);
                }
                if(board[j][i]!='.'){
                    if(colSet.contains(board[j][i])) return false;
                    colSet.add(board[j][i]);
                }
            }
        }

        for(int row=0;row<9;row+=3){
            for(int col=0;col<9;col+=3){
                if(!valid(board,row,col)){
                    return false;
                }
            }
        }
        return true;
       
        
    }

   private boolean valid(char[][] board, int row, int col) {
    Set<Character> set = new HashSet<>();

    for (int i = row; i < row + 3; i++) {
        for (int j = col; j < col + 3; j++) {
            if (board[i][j] != '.') {
                if (set.contains(board[i][j])) return false;
                set.add(board[i][j]);
                   }
    }
    }
    return true;
}

    
}
