class Solution {
    int[][]memo;
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int m=obstacleGrid.length;
        int n=obstacleGrid[0].length;
        memo=new int[m][n];
        for(int[] row:memo){
            Arrays.fill(row,-1);
        }

        return unique(0,0,m,n,obstacleGrid);
    }

    private int unique(int row,int col,int m,int n,int[][]arr){
        if(row>=m || col>=n || arr[row][col]==1) return 0;

        if(row==m-1 && col==n-1) return 1;

        if(memo[row][col]!=-1) return memo[row][col];

        int rightPath=unique(row,col+1,m,n,arr);
        int downPath=unique(row+1,col,m,n,arr);

        memo[row][col]=downPath+rightPath;

        return memo[row][col];
    }

    
}
        
    
