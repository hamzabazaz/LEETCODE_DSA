class Solution {
    public String minWindow(String s, String t) {
        int n=s.length();
        int m=t.length();
        if(s.length()<t.length()) return "";

        Map<Character,Integer> map=new HashMap<>();
        for(char ch: t.toCharArray()){
            map.put(ch,map.getOrDefault(ch,0)+1);
        }
        
        int count=0;
        int left=0;
        int right=0;
        int sIndex=-1;
        int minLen=Integer.MAX_VALUE;

        while(right<n){
            char sChar=s.charAt(right);
            if(map.containsKey(sChar)){
                if(map.get(sChar)>0){
                    count++;
                }
                map.put(sChar,map.get(sChar)-1);
            }

            while(count==m){
                if(right-left+1<minLen){
                    minLen=right-left+1;
                    sIndex=left;
                }
                
                char leftChar = s.charAt(left);
                if (map.containsKey(leftChar)) {
                    map.put(leftChar, map.get(leftChar) + 1);
                    if (map.get(leftChar) > 0) {
                        count--;
                    }

                }
                left++;

            }
            right=right+1;

        }

        return sIndex==-1?"":s.substring(sIndex,sIndex+minLen);


        
    }
}
